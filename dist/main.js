(()=>{"use strict";class t{constructor(t){this.name=t,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getName()===t))}contains(t){return this.tasks.some((e=>e.getName()===t))}totalTasks(){return this.tasks.length}addTask(t){this.tasks.find((e=>e.getName()===t.name))||this.tasks.push(t)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}getTodayTasks(){const t=new Intl.DateTimeFormat("fr-CA",{year:"numeric",month:"2-digit",day:"2-digit"}).format(Date.now());return this.tasks.filter((e=>e.dueDate===t))}getUpcomingTasks(){const t=new Intl.DateTimeFormat("fr-CA",{year:"numeric",month:"2-digit",day:"2-digit"}).format(Date.now());return this.tasks.filter((e=>e.dueDate!==t))}}class e{constructor(t,e,o,s){this.name=t,this.notes=e,this.dueDate=o,this.priority=s,this.complete=!1}setName(t){this.name=t}getName(){return this.name}setNotes(t){this.notes=t}getNotes(){return this.notes}setDate(t){this.dueDate=t}getDate(){return this.dueDate}setPriority(t){this.priority=t}getPriority(){return this.priority}setComplete(t){this.complete=t}getComplete(){return this.complete}getAllValues(t){this.name=t.name,this.notes=t.notes,this.dueDate=t.dueDate,this.priority=t.priority}getDateFormatted(){const t=this.dueDate.split("/")[0];return`${this.dueDate.split("/")[1]}/${t}/${this.dueDate.split("/")[2]}`}}class o{constructor(){this.projects=[],this.projects.push(new t("Inbox")),this.projects.push(new t("Today")),this.projects.push(new t("Upcoming"))}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()===t))}contains(t){return this.projects.some((e=>e.getName()===t))}addProject(t){this.projects.find((e=>e.name===t.name))||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}updateTodayProject(){this.getProject("Today").tasks=[],this.projects.forEach((t=>{"Today"!==t.getName()&&"Upcoming"!==t.getName()&&t.getTodayTasks().forEach((o=>{const s=`${o.getName()} (${t.getName()})`;this.getProject("Today").addTask(new e(s,o.getNotes(),o.getDate(),o.getPriority()))}))}))}updateUpcomingProject(){this.getProject("Upcoming").tasks=[],this.projects.forEach((t=>{"Today"!==t.getName()&&"Upcoming"!==t.getName()&&t.getUpcomingTasks().forEach((o=>{const s=`${o.getName()} (${t.getName()})`;this.getProject("Upcoming").addTask(new e(s,o.getNotes(),o.getDate(),o.getPriority()))}))})),this.getProject("Upcoming").setTasks(this.getProject("Upcoming").getTasks().sort(((t,e)=>new Date(t.dueDate).valueOf()-new Date(e.dueDate).valueOf())))}}class s{static saveTodoList(t){localStorage.setItem("todoList",JSON.stringify(t))}static getTodoList(){const s=Object.assign(new o,JSON.parse(localStorage.getItem("todoList")));return s.setProjects(s.getProjects().map((e=>Object.assign(new t,e)))),s.getProjects().forEach((t=>t.setTasks(t.getTasks().map((t=>Object.assign(new e,t)))))),s}static addProject(t){const e=s.getTodoList();e.addProject(t),s.saveTodoList(e)}static deleteProject(t){const e=s.getTodoList();e.deleteProject(t),s.saveTodoList(e)}static addTask(t,e){const o=s.getTodoList();o.getProject(t).addTask(e),s.saveTodoList(o)}static deleteTask(t,e){const o=s.getTodoList();o.getProject(t).deleteTask(e),s.saveTodoList(o)}static updateTaskName(t,e,o){const a=s.getTodoList();a.getProject(t).getTask(e).setName(o),s.saveTodoList(a)}static updateTaskNotes(t,e,o){const a=s.getTodoList();a.getProject(t).getTask(e).setNotes(o),s.saveTodoList(a)}static updateTaskDate(t,e,o){const a=s.getTodoList();a.getProject(t).getTask(e).setDate(o),s.saveTodoList(a)}static updateTaskPriority(t,e,o){const a=s.getTodoList();a.getProject(t).getTask(e).setPriority(o),s.saveTodoList(a)}static updateTask(t,e,o){const a=s.getTodoList();a.getProject(t).getTask(e).getAllValues(o),s.saveTodoList(a)}static updateTaskStatus(t,e,o){const a=s.getTodoList();a.getProject(t).getTask(e).setComplete(o),s.saveTodoList(a)}static updateTodayProject(){const t=s.getTodoList();t.updateTodayProject(),s.saveTodoList(t)}static updateUpcomingProject(){const t=s.getTodoList();t.updateUpcomingProject(),s.saveTodoList(t)}}class a{static loadHomepage(){a.openProject("Inbox",document.querySelector(".folder-inbox"));const t=document.querySelector("#modal");document.querySelector(".fa-xmark").addEventListener("click",(()=>{t.style.display="none"})),a.loadProjects(),a.initProjectButtons(),a.addTaskForm()}static loadProjects(){const e=document.querySelector("[data-inbox-count]"),o=document.querySelector("[data-today-count]"),c=document.querySelector("[data-upcoming-count]");e.textContent=s.getTodoList().getProject("Inbox").totalTasks(),o.textContent=s.getTodoList().getProject("Today").totalTasks(),c.textContent=s.getTodoList().getProject("Upcoming").totalTasks(),s.getTodoList().getProjects().forEach((t=>{"Inbox"!==t.name&&"Today"!==t.name&&"Upcoming"!==t.name&&a.renderProject(t.name)}));const n=document.querySelector("[data-new-project-form]");n.addEventListener("submit",(e=>{e.preventDefault();const o=document.querySelector("[data-new-project-input]"),c=o.value;if(null!==c&&""!==c){if(s.getTodoList().contains(c))return o.value="",void alert("Project already exists!");n.reset(),s.addProject(new t(c)),a.renderProject(c)}else alert("Please, set a name to your Project.")}))}static loadTasks(t){const e=document.querySelector("[data-inbox-count]"),o=document.querySelector("[data-today-count]"),c=document.querySelector("[data-upcoming-count]");e.textContent=s.getTodoList().getProject("Inbox").totalTasks(),o.textContent=s.getTodoList().getProject("Today").totalTasks(),c.textContent=s.getTodoList().getProject("Upcoming").totalTasks(),s.getTodoList().getProject(t).getTasks().forEach((t=>a.renderTask(t.name,t.notes,notes.dueDate,t.priority,t.complete)))}static renderTodoList(t){document.querySelector("[data-todo-display-container]").innerHTML=`\n            <div class="todo-header">\n                <h2 class="project-name" data-project-name>${t}</h2>\n            </div>\n\n            <div class="todo-content">\n                <div class="tasks" data-tasks></div>\n            </div>\n            <div class="clear">\n                <button class="btn delete" data-clear-completed-tasks-button>Clear Completed Tasks</button>\n                <button class="btn delete" data-delete-project-button>Delete Project</button>\n            </div>`,"Today"!==t&&"Upcoming"!==t&&(document.querySelector(".todo-content").innerHTML='\n                <div class="tasks" data-tasks></div>\n\n                <div class="new-task-btn">\n                    <i class="fa-solid fa-plus"></i>\n                    <button class="btn add-task">\n                        New Task\n                    </button>\n                </div>'),a.initAddTaskButton(),a.initClearAndDeleteButtons(),a.loadTasks(t)}static renderProject(t){const e=document.querySelector("[data-projects]"),o=document.createElement("li");o.className="project-item",o.textContent=t,e.appendChild(o),a.initProjectButtons()}static renderTask(t,e,o,s,c){const n=document.querySelector("[data-tasks]"),r=document.querySelector("#task-template"),i=document.importNode(r.content,!0),d=i.querySelector("input");d.id=t,d.checked=c;const l=i.querySelector("label");if(l.htmlFor=t,l.append(t),i.querySelector(".edit-icon").addEventListener("click",(()=>{const a=document.querySelector("[data-new-task-form]"),c=document.querySelector("#modal"),n=document.querySelector(".form-title"),r=document.querySelector("[data-new-task-name]"),i=document.querySelector("[data-new-task-notes]"),d=document.querySelector("[data-new-task-due-date]"),l=document.querySelector("[data-new-task-priority]");c.style.display="block",n.textContent="Edit Task",a.id=t,r.value=t,i.value=e,d.value=o,l.checked=s})),!0===s){const t=i.querySelector(".icons"),e=document.createElement("i");e.className="fa-solid fa-flag priority-icon",t.appendChild(e)}n.appendChild(i),document.querySelectorAll(".task-item").forEach((t=>t.addEventListener("click",a.handleTaskElement)))}static clear(){a.clearTodoDisplay(),a.clearProjects(),a.clearTasks()}static clearTodoDisplay(){document.querySelector("[data-project-name]").textContent="",document.querySelector("[data-tasks]").textContent=""}static clearProjects(){document.querySelector("[data-projects]").textContent=""}static clearTasks(){document.querySelector("[data-tasks]").textContent=""}static initProjectButtons(){const t=document.querySelector(".folder-inbox"),e=document.querySelector(".folder-today"),o=document.querySelector(".folder-upcoming"),s=document.querySelectorAll(".project-item");t.addEventListener("click",a.renderInboxTasks),e.addEventListener("click",a.renderTodayTasks),o.addEventListener("click",a.renderUpcomingTasks),s.forEach((t=>t.addEventListener("click",a.handleProjectButton)))}static renderInboxTasks(){a.openProject("Inbox",this)}static renderTodayTasks(){s.updateTodayProject(),a.openProject("Today",this)}static renderUpcomingTasks(){s.updateUpcomingProject(),a.openProject("Upcoming",this)}static handleProjectButton(t){const e=this.textContent;t.target.classList.contains("fas fa-times")?a.deleteProject(e,this):a.openProject(e,this)}static openProject(t,e){[...document.querySelectorAll("[data-folder]"),...document.querySelectorAll(".project-item")].forEach((t=>t.classList.remove("active"))),e.classList.add("active"),a.renderTodoList(t)}static deleteProject(t,e){e.classList.contains("active")&&a.clearTodoDisplay(),s.deleteProject(t),a.clearProjects(),a.loadProjects()}static initAddTaskButton(){const t=document.querySelector("[data-project-name]").textContent;"Today"!==t&&"Upcoming"!==t&&document.querySelector(".new-task-btn").addEventListener("click",(()=>{document.querySelector("#modal").style.display="block"}))}static handleTaskElement(t){"input"!==t.target.tagName.toLowerCase()?t.target.classList.contains("delete-icon")&&a.deleteTask(this):a.setTaskComplete(this)}static setTaskComplete(t){const e=document.querySelector("[data-project-name]").textContent,o=s.getTodoList().getProject(e).getTask(t.children[0].id);o.complete=t.children[0].checked,s.updateTaskStatus(e,t.children[0].id,o.complete)}static deleteTask(t){const e=document.querySelector("[data-project-name]").textContent,o=t.children[1].innerText;if("Today"===e||"Upcoming"===e){const t=o.split("(")[1].split(")")[0];s.deleteTask(t,o)}s.deleteTask(e,o),a.clearTasks(),a.loadTasks(e)}static initClearAndDeleteButtons(){const t=document.querySelector("[data-project-name]").textContent,e=document.querySelector("[data-clear-completed-tasks-button]"),o=document.querySelector("[data-delete-project-button]");e.addEventListener("click",(()=>{s.getTodoList().getProject(t).getTasks().filter((t=>t.complete)).forEach((e=>s.deleteTask(t,e.name))),a.clearTasks(),a.loadTasks(t)})),o.addEventListener("click",(()=>{"Inbox"!==t&&"Today"!==t&&"Upcoming"!==t&&(s.deleteProject(t),a.clear(),a.loadProjects())}))}static addTaskForm(){const t=document.querySelector("[data-new-task-form]"),o=document.querySelector(".form-title"),c=document.querySelector("[data-project-name]").textContent;t.addEventListener("submit",(n=>{n.preventDefault();const r=new FormData(n.target);let i={};for(let[t,e]of r)"priority"===t?i.priority=!0:i[t]=e||"";if(i.priority||(i.priority=!1),""!==i["task-title"])if(s.getTodoList().getProject(c).contains(i["task-title"]))alert("Task Already Exists!");else{if("Edit Task"===o.textContent){const t=document.querySelector("[data-project-name]").textContent;let e=s.getTodoList().getProject(t).getTask(n.target.id);e.name=i["task-title"],e.notes=i.notes,e.dueDate=i["due-date"],e.priority=i.priority,s.updateTask(t,n.target.id,e),a.clearTasks(),a.loadTasks(t)}else{const t=document.querySelector("[data-project-name]").textContent;s.addTask(t,new e(i["task-title"],i.notes,i["due-date"],i.priority)),a.clearTasks(),a.loadTasks(t)}t.reset(),modal.style.display="none"}else alert("Task Name Can't be Empty!")}))}}document.addEventListener("DOMContentLoaded",a.loadHomepage)})();